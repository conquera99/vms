datasource db {
    provider             = "mysql"
    url                  = env("DATABASE_URL")
    shadowDatabaseUrl    = env("SHADOW_DATABASE_URL")
    referentialIntegrity = "prisma"
}

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["referentialIntegrity", "interactiveTransactions"]
}

model User {
    id        String   @id @default(cuid()) @map("user_id")
    name      String?  @map("user_name")
    username  String?  @unique @map("user_username") @db.VarChar(25)
    password  String   @map("user_password") @db.VarChar(255)
    email     String?  @map("user_email") @db.VarChar(254)
    image     String?  @map("user_image")
    createdAt DateTime @default(now()) @map("user_created_at")
    createdBy String   @map("user_created_by")
    updatedAt DateTime @default(now()) @map("user_updated_at")
    updatedBy String?  @map("user_updated_by")

    @@map("users")
}

model Permissions {
    name      String   @id @map("permission_name") @db.VarChar(100)
    createdAt DateTime @default(now()) @map("permission_created_at")
    updatedAt DateTime @default(now()) @map("permission_updated_at")

    @@map("permissions")
}

model UserPermissions {
    userId    String   @map("up_user_id")
    name      String   @map("up_permission_name") @db.VarChar(100)
    access    String   @default("N") @map("up_access") @db.Char(1)
    createdAt DateTime @default(now()) @map("up_created_at")
    createdBy String   @map("up_created_by")
    updatedAt DateTime @default(now()) @map("up_updated_at")
    updatedBy String?  @map("up_updated_by")

    @@unique([userId, name])
    @@map("user_permissions")
}

model Posts {
    id        String   @id @default(cuid()) @map("post_id")
    title     String   @map("post_title") @db.VarChar(200)
    slug      String   @map("post_slug") @db.VarChar(255)
    imageId   String?  @map("post_image_id") @db.VarChar(255)
    image     String?  @map("post_image") @db.Text()
    summary   String?  @map("post_summary") @db.VarChar(255)
    keywords  String?  @map("post_keywords") @db.VarChar(255)
    content   String   @map("post_content") @db.LongText()
    status    String   @default("D") @map("post_status") @db.Char(1) // D: Draft, P: Posted, H: hidden
    createdAt DateTime @default(now()) @map("post_created_at")
    createdBy String   @map("post_created_by")
    updatedAt DateTime @default(now()) @map("post_updated_at")
    updatedBy String?  @map("post_updated_by")

    @@unique([slug])
    @@map("posts")
}

model Albums {
    id        String   @id @default(cuid()) @map("album_id")
    title     String   @map("album_title") @db.VarChar(200)
    slug      String   @map("album_slug") @db.VarChar(255)
    createdAt DateTime @default(now()) @map("album_created_at")
    createdBy String   @map("album_created_by")
    updatedAt DateTime @default(now()) @map("album_updated_at")
    updatedBy String?  @map("album_updated_by")

    @@unique([slug])
    @@map("albums")
}

model Images {
    id        String   @id @map("image_id")
    albumId   String   @map("image_album_id") @db.VarChar(255)
    image     String   @map("image") @db.Text()
    altText   String?  @map("image_alt")
    createdAt DateTime @default(now()) @map("image_created_at")
    createdBy String   @map("image_created_by")
    updatedAt DateTime @default(now()) @map("image_updated_at")
    updatedBy String?  @map("image_updated_by")

    @@map("images")
}

model Location {
    id        String   @id @default(cuid()) @map("loc_id")
    code      String   @default("") @map("loc_code") @db.VarChar(3)
    name      String   @map("loc_name")
    createdAt DateTime @default(now()) @map("loc_created_at")
    createdBy String   @map("loc_created_by")
    updatedAt DateTime @updatedAt @map("loc_updated_at")
    updatedBy String?  @map("loc_updated_by")

    @@map("locations")
}

model ItemCategory {
    id        String   @id @default(cuid()) @map("ic_id")
    code      String   @default("") @map("ic_code") @db.VarChar(6)
    name      String   @map("ic_name")
    createdAt DateTime @default(now()) @map("ic_created_at")
    createdBy String   @map("ic_created_by")
    updatedAt DateTime @updatedAt @map("ic_updated_at")
    updatedBy String?  @map("ic_updated_by")

    @@map("item_categories")
}

model Item {
    id         String   @id @default(cuid()) @map("item_id")
    code       String   @default("") @map("item_code") @db.VarChar(12)
    name       String   @map("item_name")
    categoryId String   @map("item_ic_id")
    desc       String?  @map("item_desc")
    totalQty   Decimal  @default(0) @map("item_total_qty")
    assignQty  Decimal  @default(0) @map("item_assign_qty")
    createdAt  DateTime @default(now()) @map("item_created_at")
    createdBy  String   @map("item_created_by")
    updatedAt  DateTime @updatedAt @map("item_updated_at")
    updatedBy  String?  @map("item_updated_by")

    @@map("items")
}

model ItemHistory {
    id        String   @default(cuid()) @map("ih_id")
    itemId    String   @map("ih_item_id")
    date      DateTime @map("ih_date") @db.Date
    qty       Decimal  @map("ih_qty") @db.Decimal(13, 2)
    price     Decimal  @map("ih_price") @db.Decimal(20, 3)
    imageId   String?  @map("ih_image_id") @db.VarChar(255)
    image     String?  @map("ih_image") @db.Text()
    createdAt DateTime @default(now()) @map("ih_created_at")
    createdBy String   @map("ih_created_by")
    updatedAt DateTime @updatedAt @map("ih_updated_at")
    updatedBy String?  @map("ih_updated_by")

    @@unique([id, itemId])
    @@map("item_history")
}

model ItemLocation {
    locId     String   @map("il_loc_id")
    itemId    String   @map("il_item_id")
    code      String   @default("") @map("il_code") @db.VarChar(21)
    qty       Decimal  @map("il_qty") @db.Decimal(13, 2)
    createdAt DateTime @default(now()) @map("il_created_at")
    createdBy String   @map("il_created_by")
    updatedAt DateTime @updatedAt @map("il_updated_at")
    updatedBy String?  @map("il_updated_by")

    @@unique([locId, itemId])
    @@map("item_location")
}

model Member {
    id          String    @id @default(cuid()) @map("member_id")
    name        String    @map("member_name")
    address     String?   @map("member_address")
    dateOfBirth DateTime? @map("member_date_of_birth") @db.Date
    email       String?   @map("member_email") @db.VarChar(254)
    phone       String?   @map("member_phone")
    imageId     String?   @map("member_image_id") @db.VarChar(255)
    image       String?   @map("member_image") @db.Text()
    createdAt   DateTime  @default(now()) @map("member_created_at")
    createdBy   String    @map("member_created_by")
    updatedAt   DateTime  @updatedAt @map("member_updated_at")
    updatedBy   String?   @map("member_updated_by")

    @@map("member")
}

model Campaign {
    id        String    @id @default(cuid()) @map("campaign_id")
    title     String    @map("campaign_title") @db.VarChar(255)
    slug      String    @map("campaign_slug") @db.VarChar(255)
    desc      String    @map("campaign_desc") @db.Text
    notes     String?   @map("campaign_notes") @db.Text
    imageId   String?   @map("campaign_image_id") @db.VarChar(255)
    image     String?   @map("campaign_image") @db.Text()
    startDate DateTime? @map("campaign_start_date") @db.Date
    endDate   DateTime? @map("campaign_end_date") @db.Date
    status    String    @default("A") @map("campaign_status") @db.VarChar(1) // A: Active, C: Completed, N: NonActive
    visible   String    @default("Y") @map("campaign_visbile") @db.VarChar(1) // Y: yes, N: no
    createdAt DateTime  @default(now()) @map("campaign_created_at")
    createdBy String    @map("campaign_created_by")
    updatedAt DateTime  @updatedAt @map("campaign_updated_at")
    updatedBy String?   @map("campaign_updated_by")

    @@map("campaign")
}

model CampaignDetail {
    campaignId String   @map("cd_campaign_id")
    seq        Int      @map("cd_seq") @db.Int
    name       String   @map("cd_name") @db.VarChar(255)
    desc       String?  @map("cd_desc") @db.Text
    value      Decimal  @map("cd_value") @db.Decimal(20, 3)
    status     String   @map("cd_status") @db.VarChar(1) // A: active, C: cancelled
    createdAt  DateTime @default(now()) @map("cd_created_at")
    createdBy  String   @map("cd_created_by")
    updatedAt  DateTime @updatedAt @map("cd_updated_at")
    updatedBy  String?  @map("cd_updated_by")

    @@unique([campaignId, seq])
    @@map("campaign_detail")
}

model Deceased {
    id           String    @id @default(cuid()) @map("deceased_id")
    name         String    @map("deceased_name")
    placeOfBirth String?   @map("deceased_place_of_birth") @db.VarChar(255)
    dateOfBirth  DateTime? @map("deceased_date_of_birth")
    birthNotes   String?   @map("deceased_birth_notes")
    placeOfDeath String?   @map("deceased_place_of_death") @db.VarChar(255)
    dateOfDeath  DateTime? @map("deceased_date_of_death")
    deathNotes   String?   @map("deceased_death_notes")
    imageId      String?   @map("deceased_image_id") @db.VarChar(255)
    image        String?   @map("deceased_image") @db.Text()
    family       String?   @map("deceased_family")
    createdAt    DateTime  @default(now()) @map("deceased_created_at")
    createdBy    String    @map("deceased_created_by")
    updatedAt    DateTime  @updatedAt @map("deceased_updated_at")
    updatedBy    String?   @map("deceased_updated_by")

    @@map("deceased")
}

model DeceasedFamily {
    deceasedId String @map("df_deceased_id")
    memberId   String @map("df_member_id")

    @@unique([deceasedId, memberId])
    @@map("deceased_family")
}
